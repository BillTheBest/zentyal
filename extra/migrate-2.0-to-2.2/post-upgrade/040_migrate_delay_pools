#!/usr/bin/perl
# Copyright (C) 2011 eBox Technologies S.L.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use warnings;
use strict;

use EBox;
use EBox::Global;
use POSIX qw(ceil);

EBox::init();

exit unless EBox::Global->modExists('squid');

print "Migrating Bandwidth Throttling rules to the new units...\n";

my $squid = EBox::Global->modInstance('squid');
my $redis = $squid->{redis};

my $prefix = 'modules/squid/DelayPools';
my @fields1 = qw(size rate);
my @fields2 = qw(size rate clt_size clt_rate);
my @fields = (undef, \@fields1, \@fields2);

my $fullkey;
for my $ebox ('ebox', 'ebox-ro') {
    for my $i (1..2) {
        for my $field (@{$fields[$i]}) {
            my @keys = $redis->_redis_call('keys',
                                           "/$ebox/${prefix}$i/keys/*/$field");
            for my $key (@keys) {
                my $value = $redis->get_int($key);
                if ($value != -1) {
                    $value = ceil($value / 1000);
                    $redis->set_int($key, $value);
                }
            }
        }
    }
}
