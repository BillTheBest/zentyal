my $INSTALL_FILES = '/var/tmp';

# After eBox is installed we can load its packages
eval 'use EBox';
eval 'use EBox::Global';
failed() if $@;

my (undef, undef, $uid, $gid) = getpwnam('ebox');
chown ($uid, $gid, $LOG);
EBox::init();
chdir ('/var/lib/ebox/tmp');

my $global = EBox::Global->getInstance();
failed() unless defined $global;

preconfiguration();

exit 0;

###########################
# -- installer functions --
###########################

sub failed
{
    showDialog(__('Error'), __('Installation failed.') . "\n\n" .
               __x('Check {logfile} content to see what happened',
                   logfile => $LOG));
    exit (1);
}

sub preconfiguration
{
    # load LANG variable with default locale
    my @lines = arrayFromFile('/etc/default/locale');
    my $LANG = (split ('"', $lines[0]))[1];
    $ENV{LANG} = $LANG;

    # Append eBox support languages to generate to current supported
    # locales
    my $LOCALES_FILE='/var/lib/locales/supported.d/local';
    my $TMP='/tmp/local.tmp';
    EBox::Sudo::rootWithoutException("cat /var/tmp/locale.gen $LOCALES_FILE > $TMP");
    EBox::Sudo::rootWithoutException("sort $TMP | uniq > $LOCALES_FILE");
    unlink($TMP);

    # Regenerate locales to update the new messages from eBox
    EBox::Sudo::rootWithoutException("/usr/sbin/locale-gen >> $LOG 2>&1");

    try {
        system ("/usr/share/ebox/ebox-set-locale $LANG >> $LOG 2>&1");
    } otherwise {
        my ($ex) = @_;
        my $err = $ex->text();
        system ("echo 'Error setting locale $LANG: $err' >> $LOG");
    };

    EBox::Sudo::root("$INSTALL_FILES/ebox-x11-setup '$CNF_user' >> $LOG 2>&1");
}
